<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.ssaad.ami</groupId>
	<artifactId>root-pom</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Applications Modernization Initiative (AMI): Root POM</name>
	<description>Global Root POM defining Maven plugins and configurations to be inherited by all service within AMI context</description>

	<modules>
		<module>parent-pom</module>
		<module>spring-parent</module>
		<module>spring-boot-parent</module>
		<module>common-utils</module>
		<module>common-api-error-handling</module>
		<module>common-security</module>
		<module>common-metrics</module>
		<module>spring-boot-api-service</module>
	</modules>

	<properties>
		<!-- ========== Enforce ========== -->
		<java.version>1.8</java.version>
		<!-- 3.3.9 is the most recent version supported by Red Hat Jenkins slave 
			images. We can't go to 3.5 -->
		<maven.version>3.3.9</maven.version>

		<!-- ========== Text Encoding ========== -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>


		<!-- ========= Maven Plugins Versions ========= -->
		<maven-help-plugin.version>2.2</maven-help-plugin.version>
		<maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
		<maven-properties-plugin.version>1.0.0</maven-properties-plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
		<maven-clean-plugin.version>2.5</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<maven-war-plugin.version>3.1.0</maven-war-plugin.version>
		<maven-rpm-plugin.version>2.1.5</maven-rpm-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
		<maven-jacoco-plugin.version>0.7.9</maven-jacoco-plugin.version>
		<codehaus-versions-maven-plugin.version>2.7</codehaus-versions-maven-plugin.version>

		<maven-jaxb2-plugin.version>0.12.3</maven-jaxb2-plugin.version>
		<soapui-maven-plugin.version>5.4.0</soapui-maven-plugin.version>
		<dependency-check-maven.version>5.0.0</dependency-check-maven.version>

	</properties>

	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Releases Repository</name>
			<url>http://nexus:8081/repository/maven-releases/</url>
			<layout>default</layout>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Snapshots Repository</name>
			<url>http://nexus:8081/repository/maven-snapshots/</url>
			<layout>default</layout>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${maven-help-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>${maven-properties-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<configuration>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<javadocExecutable>${java.home}/./../bin</javadocExecutable>
						<!-- Disabling javadoc formatting check for Java 8 -->
						<additionalparam>-Xdoclint:none</additionalparam>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadoc</id>
							<phase>verify</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Extend the default jar plugin config to force generation of a MANIFEST 
					file. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<skip>true</skip>
						<archive>
							<addMavenDescriptor>true</addMavenDescriptor>
							<manifest>
								<useUniqueVersions>false</useUniqueVersions>
								<addClasspath>true</addClasspath>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<classpathPrefix>lib/</classpathPrefix>
								<classpathLayoutType>simple</classpathLayoutType>
							</manifest>
						</archive>
					</configuration>
				</plugin>

				<!-- Extend the default war plugin config to generate a Manifest file 
					with all info inside. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
					<configuration>
						<warSourceDirectory>${project.basedir}/src/main/webapp</warSourceDirectory>
						<!--<packagingExcludes>WEB-INF/lib/*</packagingExcludes> -->
						<!--<archiveClasses>true</archiveClasses> -->
						<outputDirectory>${project.build.directory}/webapps</outputDirectory>
						<failOnMissingWebXml>false</failOnMissingWebXml>
						<!--<webXml>${project.basedir}/src/main/webapp/WEB-INF/web.xml</webXml> -->
						<archive>
							<addMavenDescriptor>true</addMavenDescriptor>
							<manifest>
								<addClasspath>true</addClasspath>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								<classpathPrefix>lib/</classpathPrefix>
								<classpathLayoutType>simple</classpathLayoutType>
							</manifest>
						</archive>
					</configuration>
					<executions>
						<execution>
							<id>default-war</id>
							<phase>package</phase>
							<goals>
								<goal>war</goal>
								<goal>exploded</goal>
							</goals>
							<configuration>
								<!--<skip>true</skip> -->
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<skip>${skipTests}</skip>
						<includes>
							<include>**/*Test*.java</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<configuration>
								<!--<forkMode>never</forkMode> -->
								<argLine>${argLine} -Xmx512m</argLine>
							</configuration>
							<id>default-test</id>
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${maven-jacoco-plugin.version}</version>
					<configuration>
						<skip>true</skip>
						<destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
						<dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
					</configuration>
					<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>default-report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<!-- To check dependencies update run the command: -->
					<!-- mvn versions::display-dependency-updates -->
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${codehaus-versions-maven-plugin.version}</version>
					<configuration>
						<outputFile>outdated-dependencies.txt</outputFile>
						<rulesUri>${user.home}/.m2/maven-version-rules.xml</rulesUri>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<executions>
						<execution>
							<id>enforce-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<!--<fail>false</fail> -->
								<!-- By default it's set to true -->
								<!--<failFast>true</failFast> -->
								<!-- Fails on the first rule that doesn't pass -->
								<rules>
									<requireMavenVersion>
										<version>[${maven.version},)</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<version>[${java.version},)</version>
									</requireJavaVersion>
									<!--<requireProperty> -->
									<!--<level>WARN</level> -->
									<!-- will only display a warning but does not fail the build -->
									<!--<property>project.groupId</property> <regex>com\.opticca\.services</regex> 
										<regexMessage>groupId must be com.opticca.services</regexMessage> </requireProperty> -->
									<banDistributionManagement>
										<message>Only the parent-pom can define distribution
											management</message>
										<!--Message seems ignored for this rule but this might get fixed 
											later -->
									</banDistributionManagement>
									<requireNoRepositories>
										<message>Only the parent-pom must define repositories</message>
									</requireNoRepositories>
									<banDuplicatePomDependencyVersions>
										<message>The same dependency is declared with more than 1
											version</message>
									</banDuplicatePomDependencyVersions>
									<requireReleaseDeps>
										<!--<searchTransitive>false</searchTransitive> -->
										<onlyWhenRelease>true</onlyWhenRelease>
										<failWhenParentIsSnapshot>true</failWhenParentIsSnapshot>
										<message>Snapshots are not allowed for production releases</message>
										<!--<excludes> <exclude>org.apache.maven:maven-core</exclude> <exclude>org.apache.maven.plugins:*</exclude> 
											</excludes> -->
									</requireReleaseDeps>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.jvnet.jaxb2.maven2</groupId>
					<artifactId>maven-jaxb2-plugin</artifactId>
					<version>${maven-jaxb2-plugin.version}</version>
					<executions>
						<execution>
							<id>xsd-generate</id>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<generateDirectory>${project.build.directory}/generated-sources</generateDirectory>
								<schemaDirectory>src/main/resources/xml</schemaDirectory>
								<extension>true</extension>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>com.smartbear.soapui</groupId>
					<artifactId>soapui-maven-plugin</artifactId>
					<version>${soapui-maven-plugin.version}</version>
					<configuration>
						<projectFile>${soapui.project}</projectFile>
						<printReport>true</printReport>
						<outputFolder>${basedir}/target/soapui-output</outputFolder>
						<junitReport>true</junitReport>
						<soapuiProperties>
							<property>
								<name>soapui.properties</name>
								<value>${soapui.properties}</value>
							</property>
						</soapuiProperties>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>edu.stanford.nlp</groupId>
							<artifactId>stanford-corenlp</artifactId>
							<version>3.9.1</version>
						</dependency>
						<dependency>
							<groupId>com.jgoodies</groupId>
							<artifactId>forms</artifactId>
							<version>1.2.1</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.owasp</groupId>
					<artifactId>dependency-check-maven</artifactId>
					<version>${dependency-check-maven.version}</version>
					<configuration>
						<!-- skip excessive CVE update checks for a designated duration in 
							hours -->
						<cveValidForHours>12</cveValidForHours>
						<!-- typical PCI scanning requirements are to FAIL at CVSS >= 4.0 -->
						<failBuildOnCVSS>10</failBuildOnCVSS>
						<suppressionFile>${user.home}/.m2/dependency-check-suppressions.xml</suppressionFile>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

<!-- 			<plugin> -->
<!-- 				<groupId>org.owasp</groupId> -->
<!-- 				<artifactId>dependency-check-maven</artifactId> -->
<!-- 				<inherited>false</inherited> -->
<!-- 			</plugin> -->
			<plugin>
				<!-- To check dependencies update run the command: -->
				<!-- mvn versions::display-dependency-updates -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<inherited>true</inherited>
			</plugin>

		</plugins>
	</build>

	<profiles>

		<profile>
			<id>enable-deployable-src-artifacts</id>
			<!-- This profile will be automatically activated if the directory "src" 
				exists in the root of the project -->
			<activation>
				<file>
					<exists>src</exists>
				</file>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<configuration>
						</configuration>
					</plugin>
				</plugins>

			</build>
		</profile>

		<profile>
			<id>enable-build-java-artifacts</id>
			<!-- This profile will be automatically activated if the directory "src" 
				exists in the root of the project -->
			<activation>
				<file>
					<exists>src/main/java</exists>
				</file>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<configuration>
							<skipSource>false</skipSource>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>

				</plugins>

				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
			</build>
		</profile>

		<profile>
			<id>maven-debug</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${version.maven-antrun-plugin}</version>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<property environment="env" />
										<echo>Displaying value of all properties...</echo>
										<echoproperties />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>version-replacer</id>

			<build>
				<plugins>

					<!-- This plugin has one execution configured to replace the version 
						of the module. -->
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>${version.maven-replacer-plugin}</version>
						<executions>
							<execution>
								<id>replace-module-version</id>
								<!--<phase>none</phase> -->
								<goals>
									<goal>replace</goal>
								</goals>
								<configuration>
									<basedir>.</basedir>
									<!--<basedir></basedir> -->
									<file>pom.xml</file>
									<!--<filesToInclude>*/**/pom.xml</filesToInclude> -->
									<includes>
										<include>pom.xml</include>
										<include>*/**/pom.xml</include>
									</includes>
									<ignoreMissingFile>false</ignoreMissingFile>
									<ignoreErrors>false</ignoreErrors>
									<replacements>
										<replacement>
											<xpath>/project/version/text()</xpath>
											<token>(.+)</token>
											<value>${app.version}</value>
										</replacement>
									</replacements>
									<regex>true</regex>
									<regexFlags>
										<regexFlag>MULTILINE</regexFlag>
									</regexFlags>
								</configuration>
							</execution>

							<execution>
								<id>replace-parent-version</id>
								<!--<phase>none</phase> -->
								<goals>
									<goal>replace</goal>
								</goals>
								<configuration>
									<basedir>.</basedir>
									<!--<basedir></basedir> -->
									<file>pom.xml</file>
									<!--<filesToInclude>*/**/pom.xml</filesToInclude> -->
									<includes>
										<include>*/**/pom.xml</include>
									</includes>
									<excludes>
										<exclude>parent/pom.xml</exclude>
									</excludes>
									<ignoreMissingFile>false</ignoreMissingFile>
									<ignoreErrors>false</ignoreErrors>
									<replacements>
										<replacement>
											<xpath>/project/parent/version/text()</xpath>
											<token>(.+)</token>
											<value>${app.version}</value>
										</replacement>
									</replacements>
									<regex>true</regex>
									<regexFlags>
										<regexFlag>MULTILINE</regexFlag>
									</regexFlags>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<!--Enables the production of HTML versions of the Surefire reports. The 
			output directory and names were selected to facilitate the storage of the 
			reports as Bamboo build artifacts which allows the reports to be downloaded 
			from the Bamboo plan console -->
		<profile>
			<id>enable-html-surefire-reports</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<configuration>
							<!--session.executionRootDirectory is directory from which mvn command 
								is invoked -->
							<outputDirectory>${session.executionRootDirectory}/test-reports</outputDirectory>
							<outputName>${project.artifactId}-${project.version}-surefire-report</outputName>
						</configuration>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>report-only</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>enable-maven-jaxb2-plugin</id>

			<activation>
				<file>
					<exists>src/main/resources/xml</exists>
				</file>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.jvnet.jaxb2.maven2</groupId>
						<artifactId>maven-jaxb2-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>enable-soapui-maven-plugin</id>

			<activation>
				<file>
					<exists>src</exists>
				</file>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>com.smartbear.soapui</groupId>
						<artifactId>soapui-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>
